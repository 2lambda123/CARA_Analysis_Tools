function Pc3D_Hall_Example1
%
% Example validation case for the Pc3D_Hall.m function, using data from an
% actual NASA CARA conjunction.
%
% Case 1: Example with 3D-Pc and 2D-Pc nearly equal to one another (as is
%         the case with the vast majority of high relative velocity 
%         conjunctions).
%
% Executing the test case code below should yield the following output:
%
%     Pc2D = 1.0281653e-02
%     Pc3D = 1.0281834e-02
%
% These Pc estimates have been confirmed to high accuracy using 
% Monte Carlo simulations.
%

% Set up the default parameters required by the Pc3D_Hall.m function.
% (This only needs to be done once. When using Pc3D_Hall multiple times,
% this prevents needless recalcaution of Lebedev quadrature coefficients.)
params = []; Lebedev_warning = false;
params = default_params_Pc3D_Hall(params,Lebedev_warning);

% Begin test case code:

 r1   = [-9.841950433215101e+05 +3.932342044549424e+05 +6.991223682230414e+06];
 v1   = [+4.883696742000000e+03 +5.689086045000000e+03 +3.665361590000000e+02];
 cov1 = [+4.976545641899520e+04 +5.787130862568278e+04 +3.370410320935015e+03 +1.137272273949272e+01 -4.325472616114674e+00 -8.009705480233521e+01; ...
         +5.787130862568278e+04 +6.730377643610841e+04 +3.926542932121541e+03 +1.321992688238858e+01 -5.035560720747812e+00 -9.314985106902773e+01; ...
         +3.370410320935015e+03 +3.926542932121541e+03 +2.461403197221289e+02 +7.586865834476763e-01 -3.077848629905763e-01 -5.434034460756914e+00; ...
         +1.137272273949272e+01 +1.321992688238858e+01 +7.586865834476763e-01 +2.608186227148725e-03 -9.804181796720670e-04 -1.829751672999786e-02; ...
         -4.325472616114674e+00 -5.035560720747812e+00 -3.077848629905763e-01 -9.804181796720670e-04 +3.895883508545853e-04 +6.968892326415779e-03; ...
         -8.009705480233521e+01 -9.314985106902773e+01 -5.434034460756914e+00 -1.829751672999786e-02 +6.968892326415779e-03 +1.289253320300791e-01];
 r2   = [-9.839696058965517e+05 +3.936845951174244e+05 +6.991219291625473e+06];
 v2   = [+1.509562687000000e+03 +7.372938617000000e+03 -1.492509430000000e+02];
 cov2 = [+4.246862551076427e+04 +2.066374367781032e+05 -5.011108933888592e+03 +3.104606531932427e+01 -1.201093683199582e+01 -2.207975848324051e+02; ...
         +2.066374367781032e+05 +1.005854717283451e+06 -2.434876491048039e+04 +1.510022508670080e+02 -5.850063541467530e+01 -1.074752763805685e+03; ...
         -5.011108933888592e+03 -2.434876491048039e+04 +6.131274993037449e+02 -3.667147183233717e+00 +1.391769957262238e+00 +2.601457791444154e+01; ...
         +3.104606531932427e+01 +1.510022508670080e+02 -3.667147183233717e+00 +2.272826228568773e-02 -8.778253314778023e-03 -1.613538091053610e-01; ...
         -1.201093683199582e+01 -5.850063541467530e+01 +1.391769957262238e+00 -8.778253314778023e-03 +3.428801115804722e-03 +6.251148178133809e-02; ...
         -2.207975848324051e+02 -1.074752763805685e+03 +2.601457791444154e+01 -1.613538091053610e-01 +6.251148178133809e-02 +1.148404222181769e+00];
 HBR     = 20;
 Pc2D    = PcElrod(r1,v1,cov1,r2,v2,cov2,HBR);
 Pc3D    = Pc3D_Hall(r1,v1,cov1,r2,v2,cov2,HBR,params);
 disp(['Pc2D = ' num2str(Pc2D,'%0.7e')]); 
 disp(['Pc3D = ' num2str(Pc3D,'%0.7e')]);

% End test case code.

return;
end